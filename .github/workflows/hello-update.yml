name: Update Hello Content

on:
  push:
    branches: [main]
    paths:
      - 'ansible/hello.txt'

jobs:
  ansible-only:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - uses: hashicorp/setup-terraform@v3.1.2
        with:
          terraform_version: 1.6.6

      - name: Find existing S3 bucket
        id: find_bucket
        run: |
          BUCKET_NAME=$(aws s3api list-buckets --query "Buckets[?starts_with(Name, 'terraform-state-')].Name" --output text | head -n1)
          if [ -z "$BUCKET_NAME" ]; then
            echo "❌ No existing Terraform S3 bucket found."
            exit 1
          fi
          echo "bucket_name=$BUCKET_NAME" >> $GITHUB_OUTPUT

      - name: Create backend config
        run: |
          cat > terraform/backend.tf <<EOF
          terraform {
            backend "s3" {
              bucket         = "${{ steps.find_bucket.outputs.bucket_name }}"
              key            = "terraform/terraform.tfstate"
              region         = "us-east-1"
              dynamodb_table = "terraform-state-lock"
              encrypt        = true
            }
          }
          EOF

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Get Terraform outputs
        id: tf_outputs
        working-directory: terraform
        run: echo "public_ip=$(terraform output -raw public_ip)" >> $GITHUB_OUTPUT

      - name: Save SSH key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ansible/ec2_key.pem
          chmod 600 ansible/ec2_key.pem

      - name: Create Ansible inventory
        run: |
          echo "[webserver]" > ansible/inventory.ini
          echo "${{ steps.tf_outputs.outputs.public_ip }} ansible_user=ubuntu ansible_ssh_private_key_file=ansible/ec2_key.pem ansible_ssh_common_args='-o StrictHostKeyChecking=no'" >> ansible/inventory.ini

      - name: Install Ansible
        run: sudo apt-get update && sudo apt-get install -y ansible

      - name: Wait for EC2 to be ready
        run: |
          for i in {1..30}; do
            if ssh -o StrictHostKeyChecking=no -i ansible/ec2_key.pem ubuntu@${{ steps.tf_outputs.outputs.public_ip }} echo "ready"; then
              break
            fi
            sleep 10
          done

      - name: Run Ansible Playbook
        run: ansible-playbook -i ansible/inventory.ini ansible/playbook.yml