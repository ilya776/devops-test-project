name: Update app via Ansible (hello.txt changes only)

on:
  push:
    branches:
      - main
    paths:
      - 'ansible/hello.txt'
  workflow_dispatch:

jobs:
  ansible-only:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3.1.2
        with:
          terraform_version: 1.6.6

      - name: Initialize Terraform backend to get outputs
        working-directory: terraform
        run: |
          cat > backend.tf << EOF
          terraform {
            backend "s3" {
              bucket         = "${{ needs.setup-backend.outputs.bucket-name }}"
              key            = "terraform/terraform.tfstate"
              region         = "us-east-1"
              dynamodb_table = "terraform-state-lock"
              encrypt        = true
            }
          }
          EOF
          terraform init

      - name: Get Terraform outputs (IP)
        id: tf_outputs
        working-directory: terraform
        run: |
          echo "public_ip=$(terraform output -raw public_ip)" >> $GITHUB_OUTPUT

      - name: Save SSH private key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ansible/ec2_key.pem
          chmod 600 ansible/ec2_key.pem

      - name: Create Ansible inventory
        run: |
          echo "[webserver]" > ansible/inventory.ini
          echo "${{ steps.tf_outputs.outputs.public_ip }} ansible_user=ubuntu ansible_ssh_private_key_file=ansible/ec2_key.pem ansible_ssh_common_args='-o StrictHostKeyChecking=no'" >> ansible/inventory.ini

      - name: Install Ansible
        run: sudo apt-get update && sudo apt-get install -y ansible

      - name: Wait for EC2 to be ready
        run: |
          for i in {1..30}; do
            if ssh -o StrictHostKeyChecking=no -i ansible/ec2_key.pem ubuntu@${{ steps.tf_outputs.outputs.public_ip }} echo "ready"; then
              echo "EC2 instance is ready"
              break
            fi
            echo "Waiting for EC2 instance... attempt $i"
            sleep 10
          done

      - name: Run Ansible Playbook
        run: ansible-playbook -i ansible/inventory.ini ansible/playbook.yml

      - name: Display deployment info
        run: |
          echo "🚀 Ansible update completed!"
          echo "📍 EC2 Public IP: ${{ steps.tf_outputs.outputs.public_ip }}"
          echo "🌐 Website: http://${{ steps.tf_outputs.outputs.public_ip }}"