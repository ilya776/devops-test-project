name: Deploy to AWS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3.1.2
        with:
          terraform_version: 1.6.6

      - name: Create terraform.tfvars
        working-directory: terraform
        run: |
          cat > terraform.tfvars << EOF
          key_name = "devops-key"
          ssh_public_key = "${{ secrets.SSH_PUBLIC_KEY }}"
          aws_region = "us-east-1"
          instance_type = "t2.micro"
          EOF

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Terraform Plan
        working-directory: terraform
        run: terraform plan

      - name: Terraform Apply
        working-directory: terraform
        run: terraform destroy -auto-approve

      - name: Save SSH private key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ansible/ec2_key.pem
          chmod 600 ansible/ec2_key.pem

      - name: Get EC2 public IP from Terraform output
        id: ec2_ip
        working-directory: terraform
        run: echo "public_ip=$(terraform output -raw public_ip)" >> $GITHUB_OUTPUT

      - name: Add EC2 host to inventory
        run: |
          echo "[webserver]" > ansible/inventory.ini
          echo "${{ steps.ec2_ip.outputs.public_ip }} ansible_user=ubuntu ansible_ssh_private_key_file=ansible/ec2_key.pem ansible_ssh_common_args='-o StrictHostKeyChecking=no'" >> ansible/inventory.ini

      - name: Install Ansible
        run: sudo apt-get update && sudo apt-get install -y ansible

      - name: Wait for EC2 to be ready
        run: |
          for i in {1..30}; do
            if ssh -o StrictHostKeyChecking=no -i ansible/ec2_key.pem ubuntu@${{ steps.ec2_ip.outputs.public_ip }} echo "ready"; then
              echo "EC2 instance is ready"
              break
            fi
            echo "Waiting for EC2 instance... attempt $i"
            sleep 10
          done

      - name: Run Ansible Playbook
        run: ansible-playbook -i ansible/inventory.ini ansible/playbook.yml