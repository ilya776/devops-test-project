---
- name: Configure web server
  hosts: webserver
  become: yes
  vars:
    hello_file: "/home/ubuntu/hello.txt"

  tasks:
    - name: Wait for system to be ready
      wait_for_connection:
        timeout: 300

    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install required packages
      apt:
        name:
          - nginx
          - curl
        state: present
        update_cache: yes

    - name: Copy hello.txt from repository
      copy:
        src: hello.txt
        dest: "{{ hello_file }}"
        owner: ubuntu
        group: ubuntu
        mode: '0644'

    - name: Read hello.txt content
      slurp:
        src: "{{ hello_file }}"
      register: hello_content_raw

    - name: Set hello content variable
      set_fact:
        hello_content: "{{ hello_content_raw.content | b64decode | trim }}"

    - name: Remove default nginx site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Create custom nginx configuration
      copy:
        dest: /etc/nginx/sites-available/webapp
        content: |
          server {
              listen 80 default_server;
              listen [::]:80 default_server;

              root /var/www/html;
              index index.html index.htm;

              server_name _;

              location / {
                  try_files $uri $uri/ =404;
              }

              location /health {
                  access_log off;
                  return 200 "healthy\n";
                  add_header Content-Type text/plain;
              }
          }
        owner: root
        group: root
        mode: '0644'

    - name: Enable custom site
      file:
        src: /etc/nginx/sites-available/webapp
        dest: /etc/nginx/sites-enabled/webapp
        state: link

    - name: Create custom HTML page
      copy:
        dest: /var/www/html/index.html
        content: |
          <!DOCTYPE html>
          <html>
          <head>
              <title>Hello World Page</title>
              <meta charset="UTF-8">
              <style>
                  body { 
                      font-family: Arial, sans-serif; 
                      margin: 40px; 
                      background-color: #f4f4f4; 
                  }
                  .container { 
                      background: white; 
                      padding: 30px; 
                      border-radius: 8px; 
                      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                      max-width: 800px;
                      margin: 0 auto;
                  }
                  .hello-content {
                      background: #e7f3ff;
                      padding: 20px;
                      border-radius: 4px;
                      font-size: 18px;
                      border-left: 4px solid #007bff;
                      margin: 20px 0;
                  }
                  .status { 
                      background: #d4edda; 
                      color: #155724; 
                      padding: 10px; 
                      border-radius: 4px; 
                      margin: 10px 0; 
                  }
                  .tech-info {
                      background: #f8f9fa;
                      padding: 15px;
                      border-radius: 4px;
                      margin: 20px 0;
                      border: 1px solid #dee2e6;
                  }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1>üöÄ Automated Web Deployment</h1>
                  <div class="status">
                      ‚úÖ Status: Successfully deployed via CI/CD
                  </div>
          
                  <div class="hello-content">
                      <h2>Content from hello.txt:</h2>
                      <p><strong>{{ hello_content }}</strong></p>
                  </div>
          
                  <div class="tech-info">
                      <h3>Deployment Information:</h3>
                      <p><strong>Deployed at:</strong> {{ ansible_date_time.iso8601 }}</p>
                      <p><strong>Host:</strong> {{ inventory_hostname }}</p>
                      <p><strong>OS:</strong> {{ ansible_distribution }} {{ ansible_distribution_version }}</p>
          
                      <h4>Technology Stack:</h4>
                      <ul>
                          <li>GitHub Actions (CI/CD Pipeline)</li>
                          <li>Terraform (Infrastructure as Code)</li>
                          <li>Ansible (Configuration Management)</li>
                          <li>AWS (Cloud Infrastructure)</li>
                      </ul>
          
                      <p><strong>Health Check:</strong> <a href="/health">Check Server Health</a></p>
                  </div>
              </div>
          </body>
          </html>
        owner: www-data
        group: www-data
        mode: '0644'

    - name: Test nginx configuration
      command: nginx -t
      register: nginx_test
      changed_when: false

    - name: Display nginx test result
      debug:
        msg: "Nginx configuration test: {{ nginx_test.stdout }}"

    - name: Enable and start Nginx
      systemd:
        name: nginx
        enabled: yes
        state: restarted
        daemon_reload: yes

    - name: Wait for Nginx to start
      wait_for:
        port: 80
        host: 0.0.0.0
        timeout: 30

    - name: Check Nginx status
      command: systemctl is-active nginx
      register: nginx_status

    - name: Display Nginx status
      debug:
        msg: "Nginx —Å—Ç–∞—Ç—É—Å: {{ nginx_status.stdout }}"

    - name: Test local web server
      uri:
        url: http://localhost/
        method: GET
        status_code: 200
      register: local_test

    - name: Display local test result
      debug:
        msg: "Local web test successful: {{ local_test.status }}"

    - name: Test health endpoint
      uri:
        url: http://localhost/health
        method: GET
        status_code: 200
        return_content: yes
      register: health_test

    - name: Display health test result
      debug:
        msg: "Health endpoint test: Status {{ health_test.status }} - Content: {{ health_test.content | default('No content returned') }}"