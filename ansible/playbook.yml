---
- name: Configure web server
  hosts: webserver
  become: yes
  vars:
    hello_content: "–ü—Ä–∏–≤—ñ—Ç! –¶–µ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä —Ä–æ–∑–≥–æ—Ä–Ω—É—Ç–∏–π —á–µ—Ä–µ–∑ GitHub Actions, Terraform —Ç–∞ Ansible!"
    hello_file: "/home/ubuntu/hello.txt"

  tasks:
    - name: Wait for system to be ready
      wait_for_connection:
        timeout: 300

    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install required packages
      apt:
        name:
          - nginx
          - curl
        state: present
        update_cache: yes

    - name: Create hello.txt
      copy:
        content: "{{ hello_content }}"
        dest: "{{ hello_file }}"
        owner: ubuntu
        group: ubuntu
        mode: '0644'

    - name: Remove default nginx site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Create custom nginx configuration
      copy:
        dest: /etc/nginx/sites-available/webapp
        content: |
          server {
              listen 80 default_server;
              listen [::]:80 default_server;
          
              root /var/www/html;
              index index.html index.htm;
          
              server_name _;
          
              location / {
                  try_files $uri $uri/ =404;
              }
          
              # Health check endpoint
              location /health {
                  access_log off;
                  return 200 "healthy\n";
                  add_header Content-Type text/plain;
              }
          }
        owner: root
        group: root
        mode: '0644'

    - name: Enable custom site
      file:
        src: /etc/nginx/sites-available/webapp
        dest: /etc/nginx/sites-enabled/webapp
        state: link

    - name: Create custom HTML page
      copy:
        dest: /var/www/html/index.html
        content: |
          <!DOCTYPE html>
          <html>
          <head>
              <title>–ú—ñ–π –≤–µ–±-—Å–µ—Ä–≤–µ—Ä</title>
              <meta charset="UTF-8">
              <style>
                  body { font-family: Arial, sans-serif; margin: 40px; background-color: #f4f4f4; }
                  .container { background: white; padding: 20px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
                  h1 { color: #333; }
                  .info { background: #e7f3ff; padding: 15px; border-radius: 4px; margin: 20px 0; }
                  .status { background: #d4edda; color: #155724; padding: 10px; border-radius: 4px; margin: 10px 0; }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1>üöÄ –í–µ–±-—Å–µ—Ä–≤–µ—Ä —É—Å–ø—ñ—à–Ω–æ —Ä–æ–∑–≥–æ—Ä–Ω—É—Ç–æ!</h1>
                  <div class="status">
                      ‚úÖ –°—Ç–∞—Ç—É—Å: –ü—Ä–∞—Ü—é—î –Ω–æ—Ä–º–∞–ª—å–Ω–æ
                  </div>
                  <div class="info">
                      <p><strong>–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:</strong> {{ hello_content }}</p>
                      <p><strong>–î–∞—Ç–∞ —Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è:</strong> {{ ansible_date_time.iso8601 }}</p>
                      <p><strong>–•–æ—Å—Ç:</strong> {{ inventory_hostname }}</p>
                      <p><strong>–û–°:</strong> {{ ansible_distribution }} {{ ansible_distribution_version }}</p>
                  </div>
                  <p>–¶–µ–π —Å–µ—Ä–≤–µ—Ä –±—É–ª–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é:</p>
                  <ul>
                      <li>GitHub Actions (CI/CD)</li>
                      <li>Terraform (—ñ–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞)</li>
                      <li>Ansible (–∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è)</li>
                  </ul>
                  <div class="info">
                      <p><strong>Endpoints:</strong></p>
                      <ul>
                          <li><a href="/health">Health Check</a></li>
                      </ul>
                  </div>
              </div>
          </body>
          </html>
        owner: www-data
        group: www-data
        mode: '0644'

    - name: Test nginx configuration
      command: nginx -t
      register: nginx_test

    - name: Display nginx test result
      debug:
        msg: "Nginx configuration test: {{ nginx_test.stdout }}"

    - name: Enable and start Nginx
      systemd:
        name: nginx
        enabled: yes
        state: restarted
        daemon_reload: yes

    - name: Wait for Nginx to start
      wait_for:
        port: 80
        host: 0.0.0.0
        timeout: 30

    - name: Check Nginx status
      command: systemctl is-active nginx
      register: nginx_status

    - name: Display Nginx status
      debug:
        msg: "Nginx —Å—Ç–∞—Ç—É—Å: {{ nginx_status.stdout }}"

    - name: Test local web server
      uri:
        url: http://localhost/
        method: GET
        status_code: 200
      register: local_test

    - name: Display local test result
      debug:
        msg: "Local web test successful: {{ local_test.status }}"

    - name: Test health endpoint
      uri:
        url: http://localhost/health
        method: GET
        status_code: 200
      register: health_test

    - name: Display health test result
      debug:
        msg: "Health endpoint test: {{ health_test.content }}"